name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  static-checks:
    name: Static checks (mypy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend dev dependencies (editable)
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]

      - name: Run mypy
        working-directory: backend
        run: |
          python -m mypy --strict app tests

  backend-tests:
    name: Run backend pytest (docker-compose)
    runs-on: ubuntu-latest
    needs: static-checks
    services: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Docker Compose is available
        run: |
          docker --version
          docker compose version

      - name: Build and run tests via docker-compose.test.yml
        run: |
          docker compose -f docker-compose.test.yml build --pull --no-cache
          docker compose -f docker-compose.test.yml run --rm backend-test

      - name: Collect artifacts (if created by container)
        if: always()
        run: |
          if [ -d backend/artifacts ]; then ls -la backend/artifacts; fi
